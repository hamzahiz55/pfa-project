# CronJob for PostgreSQL backups
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: aws-s3-manager
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: postgres-backup
        spec:
          serviceAccountName: postgres-sa
          restartPolicy: OnFailure
          containers:
          - name: postgres-backup
            image: postgres:15
            env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: aws-s3-manager-secrets
                  key: DB_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-s3-manager-secrets
                  key: DB_PASSWORD
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: aws-s3-manager-secrets
                  key: DB_NAME
            - name: PGHOST
              value: postgres-service
            - name: BACKUP_DATE
              value: $(date +%Y%m%d_%H%M%S)
            command:
            - /bin/bash
            - -c
            - |
              set -e
              BACKUP_DATE=$(date +%Y%m%d_%H%M%S)
              BACKUP_FILE="/backup/postgres_backup_${BACKUP_DATE}.sql.gz"
              
              echo "Starting backup at $(date)"
              pg_dump --verbose --no-owner --no-acl | gzip > "${BACKUP_FILE}"
              
              echo "Backup completed: ${BACKUP_FILE}"
              echo "Size: $(du -h ${BACKUP_FILE} | cut -f1)"
              
              # Keep only last 7 days of backups
              find /backup -name "postgres_backup_*.sql.gz" -mtime +7 -delete
              
              echo "Backup process completed at $(date)"
            volumeMounts:
            - name: backup-storage
              mountPath: /backup
            resources:
              requests:
                memory: "256Mi"
                cpu: "100m"
              limits:
                memory: "512Mi"
                cpu: "500m"
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: postgres-backup-pvc
---
# PVC for backup storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-backup-pvc
  namespace: aws-s3-manager
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: standard-storage
  resources:
    requests:
      storage: 50Gi
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-s3-manager-app
  namespace: aws-s3-manager
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aws-s3-manager-app
  template:
    metadata:
      labels:
        app: aws-s3-manager-app
    spec:
      serviceAccountName: aws-s3-manager-sa
      containers:
      - name: aws-s3-manager
        image: aws-s3-manager:v2.0.0-full-automation-test
        imagePullPolicy: Never  # Use local image
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_ENV
          valueFrom:
            configMapKeyRef:
              name: aws-s3-manager-config
              key: NEXT_PUBLIC_ENV
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: aws-s3-manager-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: aws-s3-manager-config
              key: PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: aws-s3-manager-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: aws-s3-manager-config
              key: DB_PORT
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: aws-s3-manager-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: aws-s3-manager-secrets
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: aws-s3-manager-secrets
              key: DB_NAME
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-s3-manager-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-s3-manager-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_REGION
          valueFrom:
            secretKeyRef:
              name: aws-s3-manager-secrets
              key: AWS_REGION
        - name: AWS_S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: aws-s3-manager-secrets
              key: AWS_S3_BUCKET_NAME
        - name: NEXT_PUBLIC_S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: aws-s3-manager-secrets
              key: NEXT_PUBLIC_S3_BUCKET_NAME
        - name: NEXT_PUBLIC_SNS_TOPIC_ARN
          valueFrom:
            secretKeyRef:
              name: aws-s3-manager-secrets
              key: NEXT_PUBLIC_SNS_TOPIC_ARN
        - name: NEXT_PUBLIC_SQS_QUEUE_URL
          valueFrom:
            secretKeyRef:
              name: aws-s3-manager-secrets
              key: NEXT_PUBLIC_SQS_QUEUE_URL
        - name: NEXT_PUBLIC_API_URL
          valueFrom:
            configMapKeyRef:
              name: aws-s3-manager-config
              key: NEXT_PUBLIC_API_URL
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
